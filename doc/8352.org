* Каталог организаций [0/0]
** Грабберы [4/4]																									 :atlancer:
*** DONE 20 ч. businesschr.ru	
*** DONE 30 ч. cheb.ru
*** DONE afisha.cheb.ru
*** DONE adresa.yandex.ru/?region=11156
*** yell.ru/Чебоксары
*** delpo.ru
*** www.domotido.ru/company
*** kompas21.ru
*** 21.e-adres.ru
** Импорт данных [57%] 																								 :dapi:

	 Нажали на кнопку "автоэкспорт" серве
   р пошуршал и  выдал список категорий
   на определение.  выбрали для каждой к
   атегории из  выпадающего списка нужн
   ую, нажали OK.  Сервер внес необходимы
   е записи в  result_category и поехал экспорт
   ировать.  Если пр инажании на "автоэк
   спорт" не  установленных категорий
	 небыло,
	 то без  вопросов сразу начинается экспорт.
	 
	 * [X] Устанавливаем соответствие категорий по указанному источнику.
   * [X] Выбираем все встречаемые названия категорий и ищем их соответсвия
				 в cat2sourcecat (таблицу надо создать). Если такой записи в cat2sourcecat нет,
				 даем возомжность оператору создать ее.
   * [ ] Множественные категории и предварительное заполнение result_categories
	 * [ ] Ручная доработка
 	  * [ ] непереносимые организации и категории
			 		помечать организации (наверное в results) и категорий (no_follow),
			 		которые автоматически не вносятся в каталог
		* [ ] need_human='t' и attr_freshed если есть поля которые закрыты
			 для обновления (attr_closed)
		* [ ] Автоматическое закрытие поля компании при изменении attr_closed
		* [ ] Вывод повторяющихся компаний (select count(*) from results group by company_id)
		* [ ] pending, Если что помечаем results как нуждающийся в ручной
					обратоке по полу телефонов
		* [ ] Вынести импорт разделов на отдельную страницу
   * [X] Тегирование
	 * [X] 5 ч. [5/5] Импортирование
				 Далее по каждой записи results указанного источника с флагом
				 status=updated
		 * [X] description пополняется из всех результов, если не закрыт
		 * [X] Устанавливаем короткое название, сохраняем его в result.short_name
					 чтобы постоянно не определять. result.short_name=companies.name а result.name=companies.full_name.
					 Можно переименовать в companies чтобы не путаться дальше.
		 * [X] Разбор телефонов
			 1. Парсинг адреса и установка префикса по городу или столице района
			 2. Ведем журнал ошибок импортирования, разбора телефонов для дальнейшего анализа.
		 * [X] Нормализуем адрес в вид: (Индекс) Город, Улица, дом, офис; другой_адрес,
					 сохраняем его в result.normal_addresses
		 * [X] Определяем категорию на основе results_categoreies.
		 * [100%] Добавляем компании:
			 1. [X] по телефону
			 2. [X] полному названию
   * [ ] 4 ч. Тесты
			- [ ] Нормализация адреса
			- [ ] Установка короткого имени
			- [ ] Есть новые категории
			- [ ] Удачно добавляем новую компанию
			- [ ] Удачно изменяем сущесвтующую компанию
			- [ ] Не можем обновить компанию (need_human)
	 
** Пользовательская чать
 	* добавление компании пользователем или админом
*** Рейтинги и отзывы об организации
*** Поиск
*** Добавление компаний пользователем
*** Рейтинг
*** Комментирование
*** Яндекс-карта
**** Сылка на карту
**** Указание точности
**** Поиск по близлежащим пунктам
**** Метка на карте по категори
**** Рейтингы и комментарии на карте
* Обьявления [0/0]
** Граббинг																												 :atlancer:
*** DONE 21b.ru
*** DONE cheboksary.irr.ru
*** DONE cheb.ru
*** STARTED prilavok21.ru
*** STARTED webzabor.ru
** Импорт
** Поиск
** Постинг
* backlog
** Запрос данных организации с сайта налоговой
** Буквенный путь, для категорий
** Консультирование по вопросам
** Сквозной форум
** Каталог Веб-сайтов [0/0]
*** Поисковик индексатор
*** Прикрутить к организациям
*** Собственно каталог
** Дизайн
* Задачи на удаленку
*** DONE Ищем телефоны в поле description														 :victor:
		Проверка: http://dapi.orionet.ru:3000/admin/results/edit/56612
*** DONE Преобразуем address:																				 :victor:
*** DONE Ссылка на яндекс-карту
*** DONE Нормальизация и сокращение имен компаний (short_name и normalized_name)
**** Для short_name удаляем всякие ООО, фирма и тп, оставляем только
		 непосредственное название. Если есть что-то в кавычках - удаляем все
		 и оставляем только это. Имя оставляем в capitalized виде.
**** Для normalized_name хочется видеть предприятия ввиде 
		 ООО "Сфера" или ООО Фирма "Сфера". Само название фирмы (то, что в
     кавычках) = short_name.

*** Множественные категории
		http://github.com/funkensturm/acts_as_category/tree/master
    
    Несколько категорий может иметь как подкатегория так и ее
    category_content (categorable)

    1) acts_as_multiple_categorable (для модели Item)
			 1. has_category?(id,string), categories, add_category, remove_category
			 2. включать/выключать множественность (валидация)
			 3. Установка нескольких категорий
			 4. Отключаемая валидация на присутсвие хотябы в одной категории
			 5. Выбор категорий при создании/редактировании
    2) acts_as_multiple_category (для модели Category)
     1. метод класса roots
     2. методы объекта parents, siblings, children, ancestors,
        descendants, path
     3. Включать/выключать множественность (валидация)
     4. кешировалось количество children-ов, parent-ов, descendants и
        item-ов
     5. исключала зацикливания и существование children-ов без parent-ов.
     6. Позиционирование категорий (position)
     7. как-то дружила с acts_as_tree if
        defined?(ActiveRecord::Acts::Tree)
				def typus_tree_field(attribute, items = @resource[:class].roots, attribute_virtual = 'parent_id')
				def expand_tree_into_select_field(items, attribute)
				end
    3) Хелпер для отрисовки дерева и его AJAX редактировния
			 1. Перемещать категории вместе с детками
			 2. Переименовывать, создавать новые в любом месте
			 3. Копировать/Колнировать категорию вместе с детками к другому папочке
          (установка множественной родительской категории)
			 4. +/- для сжатия/расжатия дерева фелеком и его частей.
			 5. Контроллер для этого хэлпера
*** STARTED parse_phone на строку phones 														 :victor:
		
